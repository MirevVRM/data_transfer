🚀 Data Transmission System Startup Guide (UART + Raspberry Pi)

---

🛠 What the System Does

* Transmits and receives **encrypted LoRa packets** via **E22-900T22S** modules over **UART**.
* Fully **automated**: starts on Raspberry Pi boot.
* Uses **AES-128** + **CRC8**, saves data to `.csv` and `.txt`.

---

📦 Virtual Environment Setup (venv)

**Recommended to run everything from the home directory (`/home/pi`)**

1. Create the environment:

```bash
python3 -m venv ~/lora_env
```

2. Activate it:

```bash
source ~/lora_env/bin/activate
```

3. Install dependencies:

```bash
pip install pyserial pycryptodome
```

> Make sure your scripts point to the Python binary from the venv.

---

🔄 Auto-Start via `crontab`

1. Open the editor:

```bash
crontab -e
```

2. Add the following lines:

👉 Transmitter (Sender):

```
@reboot /home/pi/lora_env/bin/python3 /home/pi/data_transfer/sender/autostart/autostart_sender.py
```

👉 Receiver:

```
@reboot /home/pi/lora_env/bin/python3 /home/pi/data_transfer/receiver/autostart/autostart_receiver.py
```

> The scripts run **autonomously** and end with a **controlled system shutdown**.

---

🧼 Clearing Logs and CSVs

1. Activate the environment:

```bash
source ~/lora_env/bin/activate
```

2. Clear data:

```bash
python3 sender/clear_data.py         # for transmitter
python3 receiver/clear_data.py       # for receiver
python3 logs_csv/clear_data.py       # clear all logs and data
```

---

### 📤 Downloading Logs from Raspberry Pi (via Wi-Fi)

On a laptop / PC:

```bash
python3 logs_csv/download_data.py
```

> You must specify the Pi’s IP address and destination path in the script.

---

⏱ Runtime Parameters (Default)

| Script   | Delay | Duration | Interval | Shutdown |
| -------- | ----- | -------- | -------- | -------- |
| Sender   | 5 sec | 150 sec  | 15 sec   | ✅ Yes    |
| Receiver | 1 sec | 170 sec  | —        | ✅ Yes    |

> All values are configurable via `CONFIG` at the top of each `autostart_*.py` script.

---

📁 File Naming Format

In manual mode (`sender.py`, `receiver.py`):

* `data/sent_run_<number>_<distance>m.csv`
* `data/received_run_<number>_<distance>m.csv`
* `logs/log_run_<number>_<distance>m.txt`

In autostart mode:

* `data/sent_run_<number>.csv`
* `data/received_run_<number>.csv`
* `logs/log_run_<number>.txt`

> Run numbers increment automatically.

---

🔐 Encryption & Integrity

* **Encryption**: AES-128, ECB mode, PKCS7 padding
* **Data integrity**: CRC8 checksum
* All algorithms are implemented locally without external APIs

---

👥 Authors

* **Snopkov D. I.**
* **Shimpf A. A.**

📅 **Version:** June 2025
